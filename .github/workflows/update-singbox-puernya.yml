name: Update sing-box PuerNya
on:
  workflow_dispatch:
  schedule:
    - cron: "30 18 * * *"
  push:
    branches:
      - main
    paths-ignore:
      - "README.md"
      - ".github/workflows/delete-old-workflows.yml"
      - ".github/workflows/update-adguardhome-prerelease.yml"
      - ".github/workflows/update-adguardhome-release.yml"
      - ".github/workflows/update-clash.meta-alpha.yml"
      - ".github/workflows/update-clash.meta-release.yml"
      - ".github/workflows/update-clashdashboard.yml"
      - ".github/workflows/update-clashpremium-latest.yml"
      - ".github/workflows/update-clashpremium-release.yml"
      - ".github/workflows/update-singbox-prerelease.yml"
      - ".github/workflows/update-singbox-release.yml"

jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.go.outputs.version}}
    steps:
      - name: get latest go version
        id: go
        run: |
          echo version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT
  
  sing-box:
    runs-on: ubuntu-latest
    needs: 
      - go
    outputs:
      version: ${{steps.sing-box.outputs.version}}
      tags: ${{steps.sing-box.outputs.tags}}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 0

      - name: setup go
        uses: actions/setup-go@v5
        with:
          go-version: ${{needs.go.outputs.version}}

      - name: get sing-box version
        id: sing-box
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          [ -z "$version" ] &&  version=building
          echo version=$version >> $GITHUB_OUTPUT
          echo tags=with_quic,with_shadowsocksr,with_ech,with_utls,with_reality_server,with_clash_api >> $GITHUB_OUTPUT
  cross:
    strategy:
      matrix:
        include:
          # linux
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
          - name: linux-amd64-v3
            goos: linux
            goarch: amd64
            goamd64: v3
          - name: linux-armv5
            goos: linux
            goarch: arm
            goarm: 5
          - name: linux-armv6
            goos: linux
            goarch: arm
            goarm: 6
          - name: linux-armv7
            goos: linux
            goarch: arm
            goarm: 7
          - name: linux-arm64
            goos: linux
            goarch: arm64
          - name: linux-mips-softfloat
            goos: linux
            goarch: mips
            gomips: softfloat
          - name: linux-mipsel-softfloat
            goos: linux
            goarch: mipsle
            gomips: softfloat
          - name: linux-mipsel-hardfloat
            goos: linux
            goarch: mipsle
            gomips: hardfloat

          # windows
          - name: windows-amd64
            goos: windows
            goarch: amd64
            goamd64: v1
          - name: windows-amd64-v3
            goos: windows
            goarch: amd64
            goamd64: v3

      fail-fast: false
    runs-on: ubuntu-latest
    needs: sing-box
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      TAGS: ${{needs.sing-box.outputs.tags}}
      VERSION: ${{needs.sing-box.outputs.version}}
    steps:
      - name: Checkout sing-box
        uses: actions/checkout@v4
        with:
          repository: PuerNya/sing-box
          ref: building
          fetch-depth: 1
          
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go.outputs.version }}
          
      - name: build core
        id: build
        run: go build -v -trimpath -ldflags "-X 'github.com/sagernet/sing-box/constant.Version=${VERSION}' -s -w -buildid=" -tags "${TAGS}" ./cmd/sing-box
        
      - name: Upload file to workspace
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: 
            sing-box*
          compression-level: 9
          
  push_prerelease:
    needs: 
      - cross
      - sing-box
    runs-on: ubuntu-latest
    env: 
      VERSION: ${{needs.sing-box.outputs.version}}
    steps:
      - name: Clone Repository
        uses: actions/checkout@main
          
      - name: Download file from workspace
        uses: actions/download-artifact@v4
        with:
          path: ./tmp
          
      - name: Download and unzip `upx`
        run: |
          upx_version=$(curl -sSL https://api.github.com/repos/upx/upx/releases/latest | grep 'tag_name' | sed 's/.*v//g' | sed 's/",$//g')
          echo "upx_version=${upx_version}" >> ${GITHUB_ENV}
          wget -P ./tmp/ "https://github.com/upx/upx/releases/download/v${upx_version}/upx-${upx_version}-amd64_linux.tar.xz"
          tar -xf "./tmp/upx-${upx_version}-amd64_linux.tar.xz" -C ./tmp/
          rm -f ./tmp/*.tar.xz

      - name: Zip core by `upx`
        run: |
          archs=(amd64 amd64-v3 armv5 armv6 armv7 arm64 mips-softfloat mipsel-hardfloat mipsel-softfloat)
          new_name=(amd64 amd64v3 armv5 armv6 armv7 armv8 mips-softfloat mipsle-hardfloat mipsle-softfloat)
          for((i=0;i<9;i++));do
            mv -f ./tmp/linux-${archs[i]}/sing-box ./tmp/sing-box-linux-${new_name[i]}
            chmod +x ./tmp/sing-box-linux-${new_name[i]}
            "./tmp/upx-${upx_version}-amd64_linux/upx" ./tmp/sing-box-linux-${new_name[i]}
          done

      - name: Move files
        run: |
          ls -R
          mkdir -p ./sing-box-puernya/
          mv -f ./tmp/sing-box* ./sing-box-puernya/
          rm -rf ./tmp* 

      - name: Commit and push `sing-box`
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git add . && git commit -m "更新 sing-box 内核 PuerNya 版至 ${VERSION}"
          git push -f

      - name: Purge jsDelivr CDN
        run: |
          cd ./sing-box-puernya/ || exit 1
          for file in $(ls); do
            curl -i "https://purge.jsdelivr.net/gh/${{ github.repository }}@main/sing-box-puernya/${file}"
          done
