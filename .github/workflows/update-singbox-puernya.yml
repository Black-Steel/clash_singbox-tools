name: Update sing-box PuerNya

on:
  workflow_dispatch:
    inputs:
      tag1:
        description: 'project name of sing-box, such as SagerNet/sing-box'
        required: true
        type: string
      tag2:
        description: 'tag or branches of sing-box, such as v1.7.8 or dev-next'
        required: true
        type: string
      tag3:
        description: 'a new prerelease name or not, if value=0, then only upload-artifact'
        required: false
        type: string
      tag4:
        description: 'build tags'
        required: false
        type: string
jobs:
  go:
    runs-on: ubuntu-latest
    outputs:
      version: ${{steps.go.outputs.version}}
    steps:
      - name: get latest go version
        id: go
        run: |
          echo version=$(curl -s https://raw.githubusercontent.com/actions/go-versions/update-versions-manifest-file/versions-manifest.json | grep -oE '"version": "[0-9]{1}.[0-9]{1,}(.[0-9]{1,})?"' | head -1 | cut -d':' -f2 | sed 's/ //g; s/"//g') >> $GITHUB_OUTPUT
  
  sing-box:
    runs-on: ubuntu-latest
    needs: go
    env:
      REPO: ${{ github.event.inputs.tag1 }}
      TAGS: ${{ github.event.inputs.tag4 }}
    outputs:
      version: ${{steps.sing-box.outputs.version}}
      tags: ${{steps.sing-box.outputs.tags}}
    steps:
      - uses: actions/checkout@v4.1.1
        with:
          repository: ${{ github.event.inputs.tag1 }}
          ref: ${{ github.event.inputs.tag2 }}
          fetch-depth: 0

      - name: setup go
        uses: actions/setup-go@v4.1.0
        with:
          go-version: ${{needs.go.outputs.version}}

      - name: get sing-box version
        id: sing-box
        run: |
          git remote add sekai https://github.com/SagerNet/sing-box.git
          git fetch --tags sekai
          version=$(CGO_ENABLED=0 go run ./cmd/internal/read_tag)
          [ -z "$version" ] &&  version=${{ github.event.inputs.tag2 }}
          echo version=$version >> $GITHUB_OUTPUT
          if [ -z "$TAGS" ];then
            if [ "$REPO" = 'PuerNya/sing-box' ];then
                echo tags=with_quic,with_shadowsocksr,with_ech,with_utls,with_reality_server,with_clash_api >> $GITHUB_OUTPUT
            else
                echo tags=with_quic,with_ech,with_utls,with_reality_server,with_clash_api >> $GITHUB_OUTPUT
            fi
          else
            echo tags=$TAGS >> $GITHUB_OUTPUT
          fi
  cross:
    strategy:
      matrix:
        include:
          # linux
          - name: linux-amd64
            goos: linux
            goarch: amd64
            goamd64: v1
          - name: linux-386
            goos: linux
            goarch: 386
          - name: linux-arm64
            goos: linux
            goarch: arm64
          - name: linux-armv5
            goos: linux
            goarch: arm
            goarm: 5
          - name: linux-armv7
            goos: linux
            goarch: arm
            goarm: 7
          - name: linux-mips-softfloat
            goos: linux
            goarch: mips
            gomips: softfloat
          - name: linux-mipsel-softfloat
            goos: linux
            goarch: mipsle
            gomips: softfloat
          - name: linux-mipsel-hardfloat
            goos: linux
            goarch: mipsle
            gomips: hardfloat   

      fail-fast: false
    runs-on: ubuntu-latest
    needs: sing-box
    env:
      GOOS: ${{ matrix.goos }}
      GOARCH: ${{ matrix.goarch }}
      GOAMD64: ${{ matrix.goamd64 }}
      GOARM: ${{ matrix.goarm }}
      GOMIPS: ${{ matrix.gomips }}
      CGO_ENABLED: 0
      TAGS: ${{needs.sing-box.outputs.tags}}
      VERSION: ${{needs.sing-box.outputs.version}}
    steps:
      - name: Checkout sing-box
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4
        with:
          repository: ${{ github.event.inputs.tag1 }}
          ref: ${{ github.event.inputs.tag2 }}
          fetch-depth: 1
          
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ steps.go.outputs.version }}
          
      - name: build core
        id: build
        run: go build -v -trimpath -ldflags "-X 'github.com/sagernet/sing-box/constant.Version=${VERSION}' -s -w -buildid=" -tags "${TAGS}" ./cmd/sing-box
        
      - name: Upload file to workspace
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: sing-box
          
  push_prerelease:
    needs: 
      - cross
      - sing-box
    runs-on: ubuntu-latest
    env: 
      RELEASE: ${{ github.event.inputs.tag3 }}
      VERSION: ${{needs.sing-box.outputs.version}}
    steps:
      - name: Download and unzip `upx`
        run: |
          mkdir -p ./tmp/
          upx_version=$(curl -sSL https://api.github.com/repos/upx/upx/releases/latest | grep 'tag_name' | sed 's/.*v//g' | sed 's/",$//g')
          echo "upx_version=${upx_version}" >> ${GITHUB_ENV}
          wget -P ./tmp/ "https://github.com/upx/upx/releases/download/v${upx_version}/upx-${upx_version}-amd64_linux.tar.xz"
          tar -xf "./tmp/upx-${upx_version}-amd64_linux.tar.xz" -C ./tmp/
          rm -f ./tmp/*.tar.xz
          
      - name: Download file from workspace
        uses: actions/download-artifact@v4
        with:
          path: ./tmp
          
      - name: Zip core by upx
        run: |      
          archs=(amd64 armv5 armv7 arm64 mips-softfloat mipsel-hardfloat mipsel-softfloat)
          new_name=(amd64 armv5 armv7 armv8 mips-softfloat mipsle-hardfloat mipsle-softfloat)
          for((i=0;i<7;i++));do
            mv -f ./tmp/linux-${archs[i]}/sing-box ./tmp/singbox-linux-${new_name[i]}
            chmod +x ./tmp/singbox-linux-${new_name[i]}
            if [ "${archs[i]}" != "armv5" ];then
              if [[ ${archs[i]} = mips* ]];then
                "./tmp/upx-${upx_version}-amd64_linux/upx" ./tmp/singbox-linux-${new_name[i]}
              fi
            fi
          done
          rm -fr upx*  
          rm -fr ./tmp/core.tar.gz
          echo ${VERSION} > ./tmp/version

      - name: Create Release and Upload Release Asset
        if: ${{ env.RELEASE != '0' }}
        uses: softprops/action-gh-release@v1
        with:
          tag_name: singbox_core${{ github.event.inputs.tag3 }}
          name: singbox_core${{ github.event.inputs.tag3 }}
          body: "The ${{env.VERSION}} version of ${{ github.event.inputs.tag1 }} \n这是${{ github.event.inputs.tag1 }}的${{env.VERSION}}版本内核文件\nhttps://github.com/${{ github.event.inputs.tag1 }}/releases \nZip by upx\n使用了upx进行压缩\nOnly support for ShellCrash\n仅限于ShellCrash项目使用"
          draft: false
          prerelease: true
          files: |
            ./tmp/* 
            
      - name: upload artifact
        if: ${{ env.RELEASE == '0' }}
        uses: actions/upload-artifact@v4.1.0
        with:
          name: sing-box-${{env.VERSION}}-${{matrix.jobs.output}}
          path: |
            ./tmp/sing-box*
          compression-level: 9 
